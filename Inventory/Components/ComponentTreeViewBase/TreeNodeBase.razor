@using Inventory.Components.ComponentTreeView
@using Inventory.Components.Icons

<li class="list-group-item border-0 pe-0 pb-0">
    @if (TreeItem != null)
    {
        <div @onmouseover="SetBgColor" @onmouseout="ResetBgColor">
            <div class="@bgColor">
                <div class="d-flex flex-row @(TreeView?.SelectedTreeItemId == TreeItem.Id ? "bg-body-secondary" : string.Empty)">
                    <div class="btn" @onclick="ToggleExpand">
                        <TreeIcons TreeItem="TreeItem" />
                    </div>
                    <div class="btn text-start" @onclick="SelectNode">
                        @TreeItem.Value
                    </div>
                    <div class="ms-auto">
                        @TreeItemTemplate(TreeItem)
                    </div>
                </div>
            </div>
        </div>
        @if (TreeItem.IsExpanded && TreeItem.Children != null && TreeItem.Children.Any())
        {
            <ul class="list-group p-0">
                @foreach (var child in TreeItem.Children)
                {
                    if (child != null)
                    {
                        <TreeNodeBase TreeItem="child" OnSelect="OnSelect" TreeItemTemplate="TreeItemTemplate" />
                    }
                }
            </ul>
        }
    }
</li>

@code {
    [Parameter]
    public TreeItem? TreeItem { get; set; }

    [Parameter]
    public RenderFragment<TreeItem> TreeItemTemplate { get; set; } = default!;

    [Parameter]
    public EventCallback<TreeItem> OnSelect { get; set; }

    [CascadingParameter]
    public TreeViewBase? TreeView { get; set; }

    private string bgColor = string.Empty;

    private async Task SelectNode()
    {
        if (TreeItem is null)
            return;

        TreeView?.SelectTreeItem(TreeItem.Id);

        if (OnSelect.HasDelegate)
            await OnSelect.InvokeAsync(TreeItem);
    }

    private void ToggleExpand()
    {
        if (TreeItem == null)
            return;

        TreeItem.IsExpanded = !TreeItem.IsExpanded;

        TreeView?.UpdateExpandedItems(TreeItem);
    }

    private void SetBgColor() => bgColor = "bg-body-tertiary";

    private void ResetBgColor() => bgColor = string.Empty;
}
