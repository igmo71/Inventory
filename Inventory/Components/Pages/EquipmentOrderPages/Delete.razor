@page "/equipmentorders/delete"
@using Inventory.Application
@using Inventory.Application.EquipmentOrderServices
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization

@inject NavigationManager NavigationManager
@inject IEquipmentOrderService Service
@inject ISerialNumberService SerialNumberService

@attribute [Authorize]

<PageTitle>Удалить</PageTitle>

<h1>Удалить</h1>

<p>Вы уверены, что хотите удалить?</p>
<div>
    <h2>Ордер на Оборудование</h2>
    <hr />
    @if (equipmentOrder is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Автор</dt>
            <dd class="col-sm-10">@equipmentOrder.Author?.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Номер</dt>
            <dd class="col-sm-10">@equipmentOrder.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Дата</dt>
            <dd class="col-sm-10">@equipmentOrder.DateTime</dd>
        </dl>        
        <dl class="row">
            <dt class="col-sm-2">Оборудование</dt>
            <dd class="col-sm-10">@equipmentOrder.Equipment?.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Серийный Номер</dt>
            <dd class="col-sm-10">@equipmentOrder.SerialNumber?.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Ответственный</dt>
            <dd class="col-sm-10">@equipmentOrder.Assignee?.Name</dd>
        </dl>        
        <dl class="row">
            <dt class="col-sm-2">Локация</dt>
            <dd class="col-sm-10">@equipmentOrder.Location?.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Дата выдачи</dt>
            <dd class="col-sm-10">@equipmentOrder.ReceiptDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Дата возврата</dt>
            <dd class="col-sm-10">@equipmentOrder.ReturnDate</dd>
        </dl>
        <EditForm method="post" Model="equipmentOrder" OnValidSubmit="DeleteEquipmentOrder" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(equipmentOrder is null)">Удалить</button> |
            <a href="/equipmentorders">Назад к Списку</a>
        </EditForm>
    }
</div>

@code {
    private EquipmentOrder? equipmentOrder;

    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
            equipmentOrder = await Service.Get(Id, new EquipmentOrderIncludeParameters
                {
                    isIncludeAssignee = true,
                    isIncludeAuthor = true,
                    isIncludeEquipment = true,
                    isIncludeLocation = true,
                    isIncludeSerialNumber = true
                });

        if (equipmentOrder is null)
            NavigationManager.NavigateTo("notfound");
    }

    private async Task DeleteEquipmentOrder()
    {
        await Service.Delete(equipmentOrder!);

        await UpdateSerialNumber();

        NavigationManager.NavigateTo("/equipmentorders");
    }

    private async Task UpdateSerialNumber()
    {
        if (equipmentOrder is not null && equipmentOrder.SerialNumber != null)
        {
            equipmentOrder.SerialNumber.IsAssigned = false;

            await SerialNumberService.Update(equipmentOrder.SerialNumber);
        }
    }
}
