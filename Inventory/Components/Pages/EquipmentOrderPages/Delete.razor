@page "/equipmentorders/delete"
@using Inventory.Application
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject IEquipmentOrderService Service

@attribute [Authorize]

<PageTitle>Удалить</PageTitle>

<h1>Удалить</h1>

<p>Вы уверены, что хотите удалить?</p>
<div>
    <h2>Ордер на Оборудование</h2>
    <hr />
    @if (equipmentorder is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Автор</dt>
            <dd class="col-sm-10">@equipmentorder.Author?.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Номер</dt>
            <dd class="col-sm-10">@equipmentorder.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Дата</dt>
            <dd class="col-sm-10">@equipmentorder.DateTime</dd>
        </dl>        
        <dl class="row">
            <dt class="col-sm-2">Оборудование</dt>
            <dd class="col-sm-10">@equipmentorder.Equipment?.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Серийный Номер</dt>
            <dd class="col-sm-10">@equipmentorder.SerialNumber?.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Назначен На</dt>
            <dd class="col-sm-10">@equipmentorder.Assignee?.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Назначен (подпись)</dt>
            <dd class="col-sm-10">@equipmentorder.IsAssigned</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Локация</dt>
            <dd class="col-sm-10">@equipmentorder.Location?.Name</dd>
        </dl>
        <EditForm method="post" Model="equipmentorder" OnValidSubmit="DeleteEquipmentOrder" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(equipmentorder is null)">Удалить</button> |
            <a href="/equipmentorders">Назад к списку</a>
        </EditForm>
    }
</div>

@code {
    private EquipmentOrder? equipmentorder;

    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
            equipmentorder = await Service.Get(Id, true, true, true, true, true);

        if (equipmentorder is null)
            NavigationManager.NavigateTo("notfound");
    }

    private async Task DeleteEquipmentOrder()
    {
        await Service.Delete(equipmentorder!);

        NavigationManager.NavigateTo("/equipmentorders");
    }
}
