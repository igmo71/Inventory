@page "/equipmentorders/details"
@using Inventory.Application.EquipmentOrderServices
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject IEquipmentOrderService Service

@attribute [Authorize]

<PageTitle>Детали</PageTitle>

<h1>Детали</h1>

<div>
    <h2>Ордера на Оборудование</h2>
    <hr />
    @if (equipmentOrder is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Автор</dt>
            <dd class="col-sm-10">@equipmentOrder.Author?.Name</dd>
            <dt class="col-sm-2">Номер</dt>
            <dd class="col-sm-10">@equipmentOrder.Number</dd>
            <dt class="col-sm-2">Дата</dt>
            <dd class="col-sm-10">@equipmentOrder.DateTime</dd>
            <dt class="col-sm-2">Оборудование</dt>
            <dd class="col-sm-10">@equipmentOrder.Equipment?.Name</dd>
            <dt class="col-sm-2">Серийный Номер</dt>
            <dd class="col-sm-10">@equipmentOrder.SerialNumber?.Number</dd>
            <dt class="col-sm-2">Ответственный</dt>
            <dd class="col-sm-10">@equipmentOrder.Assignee?.Name</dd>
            <dt class="col-sm-2">Локация</dt>
            <dd class="col-sm-10">@equipmentOrder.Location?.Name</dd>
            <dt class="col-sm-2">Дата выдачи</dt>
            <dd class="col-sm-10">@equipmentOrder.ReceiptDate</dd>
            <dt class="col-sm-2">Дата возврата</dt>
            <dd class="col-sm-10">@equipmentOrder.ReturnDate</dd>
        </dl>
        <div>
            <a href="@($"/equipmentorders/edit?id={equipmentOrder.Id}")">Изменить</a> |
            <a href="@($"/equipmentorders")">Назад к Списку</a>
        </div>
    }
</div>

@code {
    private EquipmentOrder? equipmentOrder;

    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null) 
            equipmentOrder = await Service.Get(Id, 
                isIncludeEquipment: true, 
                isIncludeSerialNumber: true, 
                isIncludeAuthor: true, 
                isIncludeAssignee: true,
                isIncludeLocation: true);

        if (equipmentOrder is null)
            NavigationManager.NavigateTo("notfound");
    }
}
