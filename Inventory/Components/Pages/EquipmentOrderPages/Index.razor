@page "/equipmentorders"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Inventory.Domain
@using Inventory.Data
@implements IAsyncDisposable
@inject IDbContextFactory<Inventory.Data.ApplicationDbContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="equipmentorders/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.EquipmentOrders">
    <PropertyColumn Property="equipmentorder => equipmentorder.AssetId" />
    <PropertyColumn Property="equipmentorder => equipmentorder.SerialNumberId" />
    <PropertyColumn Property="equipmentorder => equipmentorder.DateTime" />
    <PropertyColumn Property="equipmentorder => equipmentorder.Number" />
    <PropertyColumn Property="equipmentorder => equipmentorder.AuthorId" />
    <PropertyColumn Property="equipmentorder => equipmentorder.IsAssigned" />
    <PropertyColumn Property="equipmentorder => equipmentorder.AssigneeId" />
    <PropertyColumn Property="equipmentorder => equipmentorder.LocationId" />

    <TemplateColumn Context="equipmentorder">
        <a href="@($"equipmentorders/edit?id={equipmentorder.Id}")">Edit</a> |
        <a href="@($"equipmentorders/details?id={equipmentorder.Id}")">Details</a> |
        <a href="@($"equipmentorders/delete?id={equipmentorder.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private ApplicationDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
