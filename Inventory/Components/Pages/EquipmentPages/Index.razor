@page "/equipment"
@using Inventory.Application
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IEquipmentService Service

@attribute [Authorize]

<PageTitle>Оборудование</PageTitle>

<h1>Оборудование</h1>

<p>
    <a href="equipment/create">Создать</a>
</p>

<TreeTable EquipmentVms="equipmentVms"></TreeTable>

@code {
    GridItemsProvider<EquipmentVm>? itemsProvider;

    private List<EquipmentVm> equipmentVms = new();

    protected override async Task OnInitializedAsync()
    {
        itemsProvider = async request =>
        {
            var result = await Service.GetList(request.StartIndex, request.Count, isIncludeParent: true);

            if (!result.IsSuccess || result.Value is null)
                return default;

            var response = GridItemsProviderResult.From(
                items: result.Value.Select(e => new EquipmentVm(e)).ToList(),
                totalItemCount: result.Total
            );

            return response;
        };

        await GetEquipmentVms();
    }

    private async Task GetEquipmentVms()
    {
        var equipment = await Service.GetListWithoutParents();
        equipmentVms = equipment.Select(e => new EquipmentVm(e)).ToList();
    }

    private async Task Expand(EquipmentVm vm)
    {
        if (vm.Id == null)
            return;

        vm.Expanded = true;
        vm.Children = await Service.GetChildren(vm.Id);
    }    
}
