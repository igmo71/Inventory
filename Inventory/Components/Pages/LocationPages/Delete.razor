@page "/locations/delete"

@using Inventory.Application.LocationServices
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization

@inject NavigationManager NavigationManager
@inject ILocationService Service

@attribute [Authorize]

<PageTitle>Удалить</PageTitle>

<h1>Удалить</h1>

<p>Вы уверены, что хотите удалить?</p>
<div>
    <h2>Локацию</h2>
    <hr />

    @if(errorMessage != null){
        <div class="alert alert-danger">
            @errorMessage
        </div>
    }

    @if (location is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Наименование</dt>
            <dd class="col-sm-10">@location.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Это Папка</dt>
            <dd class="col-sm-10">@location.IsFolder</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Родительская Локация</dt>
            <dd class="col-sm-10">@location.Parent?.Name</dd>
        </dl>
        <EditForm method="post" Model="location" OnValidSubmit="DeleteLocation" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(location is null)">Удалить</button> |
            <a href=@(ReturnUrl ?? "/locations")>Назад к Списку</a>
        </EditForm>
    }
</div>

@code {
    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    private Location? location;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
            location = await Service.Get(Id, isIncludeParent: true);

        if (location is null)
            NavigationManager.NavigateTo("notfound");
    }

    private async Task DeleteLocation()
    {
        try
        {
            await Service.Delete(location!);

            ReturnUrl ??= "/locations";

            NavigationManager.NavigateTo(ReturnUrl);
        }
        catch (Exception ex)
        {
            errorMessage = $"{ex.Message} {ex.InnerException?.Message}";
            if (errorMessage.Contains("SAME TABLE REFERENCE"))
                errorMessage = "Нельзя удалить. Папка сожержит вложенные объекты.";
        }
    }
}
