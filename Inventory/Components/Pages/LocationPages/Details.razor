@page "/locations/details"

@using Inventory.Application.LocationServices
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization

@inject NavigationManager NavigationManager
@inject ILocationService Service

@attribute [Authorize]

<PageTitle>Детали</PageTitle>

<h1>Детали</h1>

<div>
    <h2>Локации</h2>
    <hr />
    @if (location is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Наименование</dt>
            <dd class="col-sm-10">@location.Name</dd>
            <dt class="col-sm-2">Это Папка</dt>
            <dd class="col-sm-10">@location.IsFolder</dd>
            <dt class="col-sm-2">Родительская Локация</dt>
            <dd class="col-sm-10">@location.Parent?.Name</dd>
        </dl>
        <div>
            <a href="@($"/locations/edit?id={location.Id}")">Изменить</a> |
            <a href="@($"/locations")">Назад к Списку</a>
        </div>
    }
</div>

@code {
    private Location? location;

    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
            location = await Service.Get(Id, isIncludeParent: true);

        if (location is null)
            NavigationManager.NavigateTo("notfound");
    }
}
