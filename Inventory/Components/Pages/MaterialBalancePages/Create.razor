@page "/materialbalances/create"
@using Microsoft.EntityFrameworkCore
@using Inventory.Domain
@inject IDbContextFactory<Inventory.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>MaterialBalance</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="MaterialBalance" OnValidSubmit="AddMaterialBalance" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="assigneeid" class="form-label">AssigneeId:</label> 
                <InputText id="assigneeid" @bind-Value="MaterialBalance.AssigneeId" class="form-control" /> 
                <ValidationMessage For="() => MaterialBalance.AssigneeId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="locationid" class="form-label">LocationId:</label> 
                <InputText id="locationid" @bind-Value="MaterialBalance.LocationId" class="form-control" /> 
                <ValidationMessage For="() => MaterialBalance.LocationId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="materialid" class="form-label">MaterialId:</label> 
                <InputText id="materialid" @bind-Value="MaterialBalance.MaterialId" class="form-control" /> 
                <ValidationMessage For="() => MaterialBalance.MaterialId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="balance" class="form-label">Balance:</label> 
                <InputNumber id="balance" @bind-Value="MaterialBalance.Balance" class="form-control" /> 
                <ValidationMessage For="() => MaterialBalance.Balance" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/materialbalances">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private MaterialBalance MaterialBalance { get; set; } = new() { Id = Guid.CreateVersion7().ToString() };

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddMaterialBalance()
    {
        using var context = DbFactory.CreateDbContext();
        context.MaterialBalances.Add(MaterialBalance);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/materialbalances");
    }
}
