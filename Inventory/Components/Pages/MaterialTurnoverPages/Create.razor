@page "/materialturnovers/create"
@using Microsoft.EntityFrameworkCore
@using Inventory.Domain
@inject IDbContextFactory<Inventory.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>MaterialTurnover</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="MaterialTurnover" OnValidSubmit="AddMaterialTurnover" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="assigneeid" class="form-label">AssigneeId:</label> 
                <InputText id="assigneeid" @bind-Value="MaterialTurnover.AssigneeId" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.AssigneeId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="locationid" class="form-label">LocationId:</label> 
                <InputText id="locationid" @bind-Value="MaterialTurnover.LocationId" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.LocationId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="materialid" class="form-label">MaterialId:</label> 
                <InputText id="materialid" @bind-Value="MaterialTurnover.MaterialId" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.MaterialId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="orderid" class="form-label">OrderId:</label> 
                <InputText id="orderid" @bind-Value="MaterialTurnover.OrderId" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.OrderId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="datetime" class="form-label">DateTime:</label> 
                <InputDate id="datetime" @bind-Value="MaterialTurnover.DateTime" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.DateTime" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="openingbalance" class="form-label">OpeningBalance:</label> 
                <InputNumber id="openingbalance" @bind-Value="MaterialTurnover.OpeningBalance" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.OpeningBalance" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="receipt" class="form-label">Receipt:</label> 
                <InputNumber id="receipt" @bind-Value="MaterialTurnover.Receipt" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.Receipt" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="expense" class="form-label">Expense:</label> 
                <InputNumber id="expense" @bind-Value="MaterialTurnover.Expense" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.Expense" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="closingbalance" class="form-label">ClosingBalance:</label> 
                <InputNumber id="closingbalance" @bind-Value="MaterialTurnover.ClosingBalance" class="form-control" /> 
                <ValidationMessage For="() => MaterialTurnover.ClosingBalance" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/materialturnovers">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private MaterialTurnover MaterialTurnover { get; set; } = new() { Id = Guid.CreateVersion7().ToString() };

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddMaterialTurnover()
    {
        using var context = DbFactory.CreateDbContext();
        context.MaterialTurnovers.Add(MaterialTurnover);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/materialturnovers");
    }
}
