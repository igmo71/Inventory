@page "/myequipment/sign"
@using Inventory.Application
@using Inventory.Application.EquipmentOrderServices
@using Inventory.Application.LocationServices
@using Inventory.Data
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@inject NavigationManager NavigationManager
@inject IEquipmentOrderService Service
@inject IEquipmentService EquipmentService
@inject ISerialNumberService SerialNumberService
@inject ILocationService LocationService

@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<PageTitle>Подписать</PageTitle>

<h1>Подписать</h1>

<h2>Получение Оборудования</h2>
<hr />
@if (equipmentOrder is null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <EditForm method="post" Model="equipmentOrder" OnValidSubmit="UpdateEquipmentOrder" FormName="edit" Enhance>

                <input type="hidden" name="equipmentOrder.Id" value="@equipmentOrder.Id" />

                <dl class="row">
                    <dt class="col-sm-3">Автор Ордера</dt>
                    <dd class="col-sm-9">@equipmentOrder.Author?.Name</dd>
                    <dt class="col-sm-3">Номер Ордера</dt>
                    <dd class="col-sm-9">@equipmentOrder.Number</dd>
                    <dt class="col-sm-3">Дата Ордера</dt>
                    <dd class="col-sm-9">@equipmentOrder.DateTime</dd>
                    <dt class="col-sm-3">Оборудование</dt>
                    <dd class="col-sm-9">@equipmentOrder.Equipment?.Name</dd>
                    <dt class="col-sm-3">Серийный Номер</dt>
                    <dd class="col-sm-9">@equipmentOrder.SerialNumber?.Number</dd>
                    <dt class="col-sm-3">Локация</dt>
                    <dd class="col-sm-9">@equipmentOrder.Location?.Name</dd>
                    <dt class="col-sm-3">Ответственный</dt>
                    <dd class="col-sm-9">@equipmentOrder.Assignee?.Name</dd>
                    <dt class="col-sm-3">Дата получения</dt>
                    <dd class="col-sm-9">@equipmentOrder.ReceiptDate</dd>
                </dl>
                <button type="submit" class="btn btn-primary">Подписать</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/myequipment">Назад к Списку</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    private EquipmentOrder? equipmentOrder;

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
            equipmentOrder = await Service.Get(Id, new EquipmentOrderIncludeParameters
                {
                    isIncludeAssignee = true,
                    isIncludeAuthor = true,
                    isIncludeEquipment = true,
                    isIncludeLocation = true,
                    isIncludeSerialNumber = true
                });

        if (equipmentOrder is null)
            NavigationManager.NavigateTo("notfound");

        if (equipmentOrder is not null)
            equipmentOrder.ReceiptDate = DateTime.Now;
    }

    private async Task UpdateEquipmentOrder()
    {
        await Service.Update(equipmentOrder!);

        await UpdateSerialNumber();

        NavigationManager.NavigateTo("/myequipment");
    }

    private async Task UpdateSerialNumber()
    {
        if (equipmentOrder is not null && equipmentOrder.SerialNumber != null)
        {
            equipmentOrder.SerialNumber.IsAssigned = true;

            await SerialNumberService.Update(equipmentOrder.SerialNumber);
        }
    }
}
