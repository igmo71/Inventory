@page "/serialnumbers/details"
@using Inventory.Application
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject ISerialNumberService Service

@attribute [Authorize]

<PageTitle>Детали</PageTitle>

<h1>Детали</h1>

<div>
    <h2>Серийного Номера</h2>
    <hr />
    @if (serialnumber is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Оборудование</dt>
            <dd class="col-sm-10">@serialnumber.Equipment?.Name</dd>
            <dt class="col-sm-2">Серийный Номер</dt>
            <dd class="col-sm-10">@serialnumber.Number</dd>
            <dt class="col-sm-2">Выдан</dt>
            <dd class="col-sm-10">@serialnumber.IsAssigned</dd>
        </dl>
        <div>
            <a href="@($"/serialnumbers/edit?id={serialnumber.Id}")">Изменить</a> |
            <a href="@($"/serialnumbers")">Назад к Списку</a>
        </div>
    }
</div>

@code {
    private SerialNumber? serialnumber;

    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
            serialnumber = await Service.Get(Id, isIncludeEquipment: true);

        if (serialnumber is null)
            NavigationManager.NavigateTo("notfound");
    }
}
