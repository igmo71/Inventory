@page "/serialnumbers/edit"

@using Inventory.Application
@using Inventory.Domain
@using Microsoft.AspNetCore.Authorization

@inject NavigationManager NavigationManager
@inject ISerialNumberService Service
@inject IEquipmentService EquipmentService

@attribute [Authorize]

<PageTitle>Изменить</PageTitle>

<h1>Изменить</h1>

<h2>Серийный Номер</h2>
<hr />
@if (SerialNumber is null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="SerialNumber" OnValidSubmit="UpdateSerialNumber" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary role="alert"/>
                <input type="hidden" name="SerialNumber.Id" value="@SerialNumber.Id" />
                <div class="mb-3">
                    <label for="equipmentid" class="form-label">Оборудование:</label>
                    <InputSelect id="equipmentid" @bind-Value="SerialNumber.EquipmentId" class="form-control">
                        <option value="">- Выберите -</option>
                        @foreach (var equip in equipment)
                        {
                            <option value="@equip.Id">@equip.Name </option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => SerialNumber.EquipmentId" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="number" class="form-label">Number:</label>
                    <InputText id="number" @bind-Value="SerialNumber.Number" class="form-control" />
                    <ValidationMessage For="() => SerialNumber.Number" class="text-danger" />
                </div>
                <div class="form-check mb-3">
                    <input class="form-check-input" type="checkbox" @bind="SerialNumber.IsAssigned" value="@SerialNumber.IsAssigned" id="isAssigned">
                    <label class="form-check-label" for="isAssigned">
                        Выдан
                    </label>
                </div>
                <button type="submit" class="btn btn-primary">Сохранить</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/serialnumbers">Назад к Списку</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private string? Id { get; set; }

    [SupplyParameterFromForm]
    private SerialNumber? SerialNumber { get; set; }

    private List<Equipment> equipment = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
            SerialNumber ??= await Service.Get(Id, isIncludeEquipment: true);

        if (SerialNumber is null)
            NavigationManager.NavigateTo("notfound");

        await GetEquipment();
    }

    private async Task GetEquipment()
    {
        equipment = await EquipmentService.GetListWithoutFolders();
    }

    private async Task UpdateSerialNumber()
    {
        await Service.Update(SerialNumber!);

        NavigationManager.NavigateTo("/serialnumbers");
    }
}
